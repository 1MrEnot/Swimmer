@using Swimmer.Application

<table>
    <tr>
        <th>
            Row
        </th>
        <th>
            Name
        </th>
        <th>
            Preliminary Time
        </th>
        <th>
            Time
        </th>
    </tr>

    @foreach (var (i, athlete) in AthletesToShow().Select((i, x) => (x, i)))
    {
        <CascadingValue Value="@this">
            <AthleteOnSwimComponent Row="i + 1" Name="@athlete?.Athlete.Name" PreliminaryTime="athlete?.PreliminaryTime"/>  
        </CascadingValue>
    }

</table>

@code {
    [Parameter]
    public SwimDto Swim { get; set; } = null!;

    [Parameter]
    public int TrackCount { get; set; }

    private List<AthleteOnSwimComponent> _children = new();

    private IEnumerable<AthleteOnSwimDto?> AthletesToShow()
    {
        var arr = new AthleteOnSwimDto?[TrackCount];
        foreach (var athleteOnSwimDto in Swim.Athletes)
            arr[athleteOnSwimDto.Track - 1] = athleteOnSwimDto;

        return arr;
    }

    public void SetAthleteTime(int trackId, TimeSpan time)
    {
        _children[trackId - 1].Time = time;
        StateHasChanged();
    }

    internal void AddChild(AthleteOnSwimComponent athleteOnSwimComponent)
    {
        _children.Add(athleteOnSwimComponent);
    }
}